name: Build and Release Python Versions (Reusable)

on:
  workflow_call:
    inputs:
      arch:
        required: true
        type: string
      tag:
        required: true
        type: string
      platform-version:
        required: true
        type: string
      runner-label:
        required: true
        type: string

jobs:
  build-and-release:
    runs-on: ${{ inputs.runner-label }}
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build PowerShell Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./PowerShell
          build-args: |
            POWERSHELL_VERSION=v7.5.1
            POWERSHELL_NATIVE_VERSION=v7.4.0
            UBUNTU_VERSION=${{ inputs.platform-version }}
            TARGETARCH=${{ inputs.arch }}
          tags: powershell:ubuntu
          cache-from: type=gha,scope=pwsh-${{ inputs.platform-version }}-${{ inputs.arch }}
          cache-to: type=gha,mode=max,scope=pwsh-${{ inputs.platform-version }}-${{ inputs.arch }}

      - name: Build Python Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./python-versions
          build-args: |
            python_version=${{ inputs.tag }}
            UBUNTU_VERSION=${{ inputs.platform-version }}
            TARGETARCH=${{ inputs.arch }}
          tags: pyvers:build
          outputs: type=local,dest=python-versions/output
          cache-from: type=gha,scope=pyvers-${{ inputs.platform-version }}-${{ inputs.arch }}-${{ inputs.tag }}
          cache-to: type=gha,mode=max,scope=pyvers-${{ inputs.platform-version }}-${{ inputs.arch }}-${{ inputs.tag }}

      - name: List output files
        run: ls -l python-versions/output

      - name: Upload tar artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-tar
          path: python-versions/output/python-${{ inputs.tag }}-linux-${{ inputs.arch }}.tar.gz
