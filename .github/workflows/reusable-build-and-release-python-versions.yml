name: Build and Release Python Versions (Reusable)

on:
  workflow_call:
    inputs:
      arch:
        required: true
        type: string
      tag:
        required: true
        type: string
      platform-version:
        required: true
        type: string
      runner-label:
        required: true
        type: string

jobs:
  build-and-release:
    runs-on: ${{ inputs.runner-label }}
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Build PowerShell Docker image
        run: |
          docker build \
            --build-arg POWERSHELL_VERSION=v7.5.1 \
            --build-arg POWERSHELL_NATIVE_VERSION=v7.4.0 \
            --build-arg UBUNTU_VERSION=${{ inputs.platform-version }} \
            --build-arg TARGETARCH=${{ inputs.arch }} \
            -t powershell:ubuntu ./PowerShell > build-pwsh.log 2>&1 || (tail -n 40 build-pwsh.log && exit 1)

      - name: Build Python Docker image and extract tarball
        run: |
          docker build \
            --build-arg python_version=${{ inputs.tag }} \
            --build-arg UBUNTU_VERSION=${{ inputs.platform-version }} \
            --build-arg TARGETARCH=${{ inputs.arch }} \
            --build-arg BASE_IMAGE=powershell:ubuntu \
            -t pyvers:build ./python-versions > build-python.log 2>&1 || (tail -n 40 build-python.log && exit 1)
          container_id=$(docker create pyvers:build)
          mkdir -p python-versions/output
          docker cp "$container_id:/python-versions/output/python-${{ inputs.tag }}-linux-${{ inputs.arch }}.tar.gz" "python-versions/output/"
          docker rm "$container_id"

      - name: List output files
        run: ls -l python-versions/output

      - name: Upload tar artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-tar
          path: python-versions/output/python-${{ inputs.tag }}-linux-${{ inputs.arch }}.tar.gz
